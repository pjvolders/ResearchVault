# Generated by Django 4.2.20 on 2025-03-11 19:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='First name of the person', max_length=100)),
                ('last_name', models.CharField(help_text='Last name of the person', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='Email address', max_length=254)),
                ('orcid', models.CharField(blank=True, help_text='ORCID identifier', max_length=19)),
                ('affiliation', models.CharField(blank=True, help_text='Primary institutional affiliation', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'People',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the publication', max_length=500)),
                ('abstract', models.TextField(blank=True, help_text='Abstract of the publication')),
                ('journal', models.CharField(blank=True, help_text='Journal name', max_length=255)),
                ('conference', models.CharField(blank=True, help_text='Conference name', max_length=255)),
                ('volume', models.CharField(blank=True, help_text='Volume number', max_length=50)),
                ('issue', models.CharField(blank=True, help_text='Issue number', max_length=50)),
                ('pages', models.CharField(blank=True, help_text='Page range', max_length=50)),
                ('publication_date', models.DateField(blank=True, help_text='Date of publication', null=True)),
                ('publication_year', models.PositiveIntegerField(blank=True, help_text='Year of publication', null=True)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier', max_length=100)),
                ('pmid', models.CharField(blank=True, help_text='PubMed ID', max_length=20)),
                ('arxiv_id', models.CharField(blank=True, help_text='arXiv ID', max_length=50)),
                ('isbn', models.CharField(blank=True, help_text='ISBN for books', max_length=20)),
                ('url', models.URLField(blank=True, help_text='URL to the publication')),
                ('pdf_file', models.FileField(blank=True, help_text='PDF file of the publication', null=True, upload_to='publications/pdfs/')),
                ('supplementary_materials', models.FileField(blank=True, help_text='Supplementary materials', null=True, upload_to='publications/supplementary/')),
                ('keywords', models.TextField(blank=True, help_text='Keywords (comma separated)')),
                ('research_field', models.CharField(blank=True, help_text='Field of research', max_length=100)),
                ('citation_count', models.PositiveIntegerField(default=0, help_text='Number of citations')),
                ('impact_factor', models.FloatField(blank=True, help_text='Journal impact factor', null=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about the publication')),
                ('read_status', models.BooleanField(default=False, help_text='Whether the publication has been read')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('authors', models.ManyToManyField(help_text='Authors of the publication', related_name='publications', to='core.person')),
                ('corresponding_author', models.ForeignKey(blank=True, help_text='Corresponding author', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corresponding_publications', to='core.person')),
            ],
            options={
                'ordering': ['-publication_year', 'title'],
            },
        ),
    ]
